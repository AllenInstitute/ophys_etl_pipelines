version: 2.1
orbs:
  singularity: singularity/singularity@1.0.10
  python: circleci/python@0.3
jobs:
  singularity-image:
    executor: singularity/machine
    steps:
      - checkout
      - singularity/install-go:
          go-version: '1.13'
      - singularity/debian-install-3:
          singularity-version: 3.5.0
      - run:
          # copied from singularity/build-image to add branch-specific build
          name: Build Singularity Container
          command: |
            NOSUDO=false
            which sudo || NOSUDO=true
            if [[ "$NOSUDO" == "false" ]]; then
                if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
            fi
            if [ -f "$BASH_ENV" ]; then source $BASH_ENV; fi
            $SUDO SINGULARITYENV_OPHYS_ETL_TAG=${CIRCLE_BRANCH} singularity build suite2p_container.img src/ophys_etl/transforms/suite2p_container.def
      - run:
          name: Run Singularity Container pytest
          command: |
            singularity run ./suite2p_container.img python -m pytest /ophys_etl_pipelines
      - run:
          name: Run Singularity Container Smoke Test
          command: |
            mkdir smoke_output
            singularity run ./suite2p_container.img python -m ophys_etl.transforms.suite2p_wrapper --h5py tests/transforms/resources/movie_100x100x100.h5 --output_dir smoke_output --bin_size 10 --log_level INFO --output_json smoke_output/output.json
      - run:
          name: Upload Singularity Image
          command: |
            echo ${SYLABS_TOKEN} | singularity remote login
            if [ "$CIRCLE_BRANCH" = "master" ]
            then
                singularity push -U suite2p_container.img library://allen_institute_pika/ophys_etl_pipelines/suite2p_container.img:latest
            else
                singularity push -U suite2p_container.img library://allen_institute_pika/ophys_etl_pipelines/suite2p_container.img:develop
            fi

  build377: &test-template
    executor:
      name: python/default
      tag: "3.7.7"
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - run:
          command: |
            pip install .
            # pytest would be a dep in requirements.txt
            python -m pytest --cov ophys_etl --cov-report xml
            bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}
          name: Test

  build38: 
    <<: *test-template
    executor:
      name: python/default
      tag: "3.8"

  lint:
    executor: python/default
    steps:
      - checkout
      - run:
          command: |
            pip install flake8
            # `|| true` to force exit code 0 even if no files found
            CHANGED_PYFILES=$(git diff --diff-filter AMR --name-only origin/master | grep .py || true)
            echo "List of changed files:"
            echo ${CHANGED_PYFILES}
            echo ${CHANGED_PYFILES} | xargs -r flake8 --count
          name: Lint

workflows:
  main:
    jobs:
      - build377
      - build38
      - lint
      - singularity-image:
          requires:
            - build377
            - lint
          filters:
            branches:
              only:
                - master
                - /.*singularity.*/
