version: 2.1
orbs:
  python: circleci/python@0.3
jobs:
  docker:
    machine: true
    steps:
      - checkout
      - run:
          name: Build docker image
          command: |
            docker build --build-arg OPHYS_ETL_TAG=${CIRCLE_BRANCH} --build-arg OPHYS_ETL_COMMIT_SHA=${CIRCLE_SHA1} -t alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} docker/
      - run:
          name: Run docker image pytest
          # docker runs should succeed with --read-only flag if expected to be
          # run by singularity
          # https://sylabs.io/guides/3.6/user-guide/singularity_and_docker.html#best-practices
          command: |
                  set -e
                  # set entrypoint like this so we can handle quotes
                  docker run --entrypoint /bin/bash --read-only --tmpfs /tmp alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} -c "/envs/suite2p/bin/python -m pytest -m 'suite2p_only or suite2p_also' /repos/ophys_etl/tests"
                  docker run --entrypoint /bin/bash --read-only --tmpfs /tmp alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} -c "/envs/event_detection/bin/python -m pytest -m 'event_detect_only' /repos/ophys_etl/tests"
                  docker run --entrypoint /bin/bash --read-only --tmpfs /tmp alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} -c "/envs/ophys_etl/bin/python -m pytest -m 'not suite2p_only' -m 'not event_detect_only' /repos/ophys_etl/tests"
      - run:
          name: Run docker image smoke test
          command: |
                  set -e
                  docker run --read-only --tmpfs /tmp alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} /envs/suite2p/bin/python -m ophys_etl.transforms.suite2p_wrapper --h5py /repos/ophys_etl/tests/transforms/resources/movie_100x100x100.h5 --output_dir /tmp --movie_frame_rate 1.0 --log_level INFO --output_json /tmp/output.json
      - run:
          name: Upload docker image
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            if [ "$CIRCLE_BRANCH" = "main" ]
            then
                docker tag alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} alleninstitutepika/ophys_etl_pipelines:main
            else
                docker tag alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} alleninstitutepika/ophys_etl_pipelines:develop
            fi
            docker push alleninstitutepika/ophys_etl_pipelines

  build377: &test-template
    executor:
      name: python/default
      tag: "3.7.7"
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - run:
          command: |
            pip install .
            # pytest would be a dep in requirements.txt
            python -m pytest -m "not suite2p_only" \
                             -m "not event_detect_only" \
                             --cov ophys_etl --cov-report xml
            bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}
          name: Test

  build38: 
    <<: *test-template
    executor:
      name: python/default
      tag: "3.8"

  lint:
    executor: python/default
    steps:
      - checkout
      - run:
          command: |
            pip install flake8
            # `|| true` to force exit code 0 even if no files found
            CHANGED_PYFILES=$(git diff --diff-filter AMR --name-only origin/main | grep '\.py' || true)
            echo "List of changed files:"
            echo ${CHANGED_PYFILES}
            echo ${CHANGED_PYFILES} | xargs -r flake8 --count
          name: Lint

workflows:
  main:
    jobs:
      - build377
      - build38
      - lint
      - docker:
          requires:
            - build377
            - build38
          filters:
            branches:
              only:
                - main
                - /.*dev.*/
