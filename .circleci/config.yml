version: 2.1
orbs:
  python: circleci/python@1.4

commands:
  build_and_test:
    parameters:
      python_version:
        type: string
    steps:
      - checkout
      - run:
          name: Build docker image
          command: |
            docker build --build-arg OPHYS_ETL_TAG=${CIRCLE_BRANCH} --build-arg OPHYS_ETL_COMMIT_SHA=${CIRCLE_SHA1} --build-arg TEST_PYTHON_VERSION=<< parameters.python_version >> -t alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} .circleci/docker
      - run:
          name: Run docker image pytest
          # docker runs should succeed with --read-only flag if expected to be
          # run by singularity
          # https://sylabs.io/guides/3.6/user-guide/singularity_and_docker.html#best-practices
          command: |
                set -e
                mkdir /tmp/<< parameters.python_version >>
                mkdir $PWD/coverage_outputs_<< parameters.python_version >>
                # set entrypoint like this so we can handle quotes
                docker run --entrypoint /bin/bash --read-only --tmpfs /tmp --mount type=bind,source=$PWD/coverage_outputs_<< parameters.python_version >>,target=/coverage_outputs_<< parameters.python_version >> alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} /repos/ophys_etl/.circleci/scripts/run_and_test.sh "not event_detect_only" << parameters.python_version >> ophys_etl general_cov.xml
                bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN} -f $PWD/coverage_outputs_<< parameters.python_version >>/general_cov.xml -cF general_tests

jobs:
  docker:
    machine: true
    steps:
      - checkout
      - run:
          name: Build docker image
          command: |
            docker build --build-arg OPHYS_ETL_TAG=${CIRCLE_BRANCH} --build-arg OPHYS_ETL_COMMIT_SHA=${CIRCLE_SHA1} -t alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} docker/
      - run:
          name: Run docker image pytest
          # docker runs should succeed with --read-only flag if expected to be
          # run by singularity
          # https://sylabs.io/guides/3.6/user-guide/singularity_and_docker.html#best-practices
          command: |
                  set -e
                  mkdir $PWD/coverage_outputs_3.8
                  # set entrypoint like this so we can handle quotes
                  docker run --entrypoint /bin/bash --read-only --tmpfs /tmp -v $PWD/coverage_outputs_3.8:/coverage_outputs_3.8 alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} /repos/ophys_etl/.circleci/scripts/run_and_test.sh "not event_detect_only" 3.8 suite2p suite2p_cov.xml
                  bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN} -f $PWD/coverage_outputs_3.8/suite2p_cov.xml -cF suite2p_tests
                  docker run --entrypoint /bin/bash --read-only --tmpfs /tmp -v $PWD/coverage_outputs_3.8:/coverage_outputs_3.8 alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} /repos/ophys_etl/.circleci/scripts/run_and_test.sh "event_detect_only" 3.8 event_detection event_cov.xml
                  bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN} -f $PWD/coverage_outputs_3.8/event_cov.xml -cF event_detection_tests
                  docker run --entrypoint /bin/bash --read-only --tmpfs /tmp -v $PWD/coverage_outputs_3.8:/coverage_outputs_3.8 alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} /repos/ophys_etl/.circleci/scripts/run_and_test.sh "not event_detect_only" 3.8 ophys_etl general_cov.xml
                  bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN} -f $PWD/coverage_outputs_3.8/general_cov.xml -cF general_tests
      - run:
          name: Run docker image smoke test
          command: |
                  set -e
                  docker run --read-only --tmpfs /tmp alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} /envs/suite2p/bin/python -m ophys_etl.modules.suite2p_wrapper --h5py /repos/ophys_etl/tests/modules/suite2p_wrapper/resources/movie_100x100x100.h5 --output_dir /tmp --movie_frame_rate 1.0 --log_level INFO --output_json /tmp/output.json
      - run:
          name: Upload docker image
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            if [ "$CIRCLE_BRANCH" = "main" ]
            then
                docker tag alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} alleninstitutepika/ophys_etl_pipelines:main
            else
                docker tag alleninstitutepika/ophys_etl_pipelines:${CIRCLE_SHA1} alleninstitutepika/ophys_etl_pipelines:develop
            fi
            docker push alleninstitutepika/ophys_etl_pipelines

  build377:
    machine: true
    steps:
      - build_and_test:
          python_version: "3.7.7"

  build38:
    machine: true
    steps:
      - build_and_test:
          python_version: "3.8"

  lint:
    executor: python/default
    steps:
      - checkout
      - run:
          command: |
            pip install flake8
            # `|| true` to force exit code 0 even if no files found
            CHANGED_PYFILES=$(git diff --diff-filter AMR --name-only origin/main | grep '\.py' || true)
            echo "List of changed files:"
            echo ${CHANGED_PYFILES}
            echo ${CHANGED_PYFILES} | xargs -r flake8 --count
          name: Lint

workflows:
  main:
    jobs:
      - build377
      - build38
      - lint
      - docker:
          requires:
            - build377
            - build38
            - lint
          filters:
            branches:
              only:
                - main
                - /.*dev.*/
